/*
 * DisplayViewPanel.java
 *
 * Created on January 22, 2007, 2:36 PM
 */

package view;

import controller.DefaultController;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagLayout;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.beans.PropertyChangeEvent;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;


/**
 * This is a custom view panel that displays a "document" consisting of a single
 * text element. Both the document and the text element respond to changes in
 * the model state.
 *
 * @author Robert Eckstein
 */

public class DisplayViewPanel extends AbstractViewPanel implements ActionListener,
ItemListener
{
    //  The components used by this view
    private DefaultController controller;
    private JFrame frame;
    private JMenuBar menuBar;
    private JMenu menuNasalBattle;
    private JMenu menuLanguages;
    private JMenu menuHelp;
    private JMenuItem menuItemNew;
    private JMenuItem menuItemQuit;
    private JMenuItem menuItemFR;
    private JMenuItem menuItemEN;
    private JMenuItem menuItemAbout;
    private JMenuItem menuItemDonate;
    private JPanel playerPanel = null;
    private JPanel infoPanel = null;
    private JPanel gridPanel = null;
	private JPanel jPanel1 = null;
	private JPanel jPanel2 = null;
	private JLabel jLabel1 = null;
	private JLabel p1NameLabel = null;
	private JLabel p1InfoLabel = null;
	private JLabel p1BigMorveLabel = null;
	private JLabel p1MidMorveLabel = null;
	private JLabel p1LittleMorveLabel = null;
	private JLabel p1NoBigMorves = null;
	private JLabel p1NoMidMorves = null;
	private JLabel p1NoLittleMorves = null;
    
    /**
     * Creates new form TextElementDisplayPanel
     * @param controller An object implenting the controller interface that
     *        this view can use to process GUI actions
     */
    public DisplayViewPanel(DefaultController controller) {
        
        this.controller = controller;
        
        initFrame();
        initComponents();
        localInitialization();
    }
    
    /**
     * Initialization method called from the constructor to init the frame
     */
    public void initFrame() {
		frame = new JFrame("Bataille Nasale");
		// Add a window listner for close button
		frame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
		frame.setPreferredSize(new Dimension(800, 500));
		frame.pack();
		frame.setVisible(true);
    }

    /**
     * Initialization method called from the constructor
     */
    public void localInitialization() {
        
    }
    
    // </editor-fold>
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
    	menuBar = new JMenuBar();
    	menuNasalBattle = new JMenu("Bataille Nasale");
    	menuBar.add(menuNasalBattle);
    	menuItemNew = new JMenuItem("Nouvelle Partie");
    	menuItemNew.addActionListener(this);
    	menuNasalBattle.add(menuItemNew);
    	menuItemQuit = new JMenuItem("Quitter");
    	menuItemQuit.addActionListener(this);
    	menuNasalBattle.add(menuItemQuit);
    	menuLanguages = new JMenu("Langues");
    	menuBar.add(menuLanguages);
    	menuItemFR = new JMenuItem("Français");
    	menuItemFR.addActionListener(this);
    	menuLanguages.add(menuItemFR);
    	menuItemEN = new JMenuItem("Anglais");
    	menuItemEN.addActionListener(this);
    	menuLanguages.add(menuItemEN);
    	menuHelp = new JMenu("Aide");
    	menuBar.add(menuHelp);
    	menuItemAbout = new JMenuItem("A propos");
    	menuItemAbout.addActionListener(this);
    	menuHelp.add(menuItemAbout);
    	menuItemDonate = new JMenuItem("Faire un don");
    	menuItemDonate.addActionListener(this);
    	menuHelp.add(menuItemDonate);
    	frame.setJMenuBar(menuBar);
		frame.add(getPlayerPanel());
		frame.add(getInfoPanel());
		frame.add(getGridPanel());
    }
    
    /**
     * Called by the controller when it needs to pass along a property change
     * from a model.
     * @param evt The property change event
     */
    public void modelPropertyChange(PropertyChangeEvent evt) {
        
    }
    
	private JPanel getPlayerPanel() {
		if (playerPanel == null) {
			p1NoBigMorves = new JLabel();
			p1NoBigMorves.setBounds(new Rectangle(290, 35, 40, 20));
			p1NoBigMorves.setText("X");
			p1NoMidMorves = new JLabel();
			p1NoMidMorves.setBounds(new Rectangle(290, 55, 40, 20));
			p1NoMidMorves.setText("Y");
			p1NoLittleMorves = new JLabel();
			p1NoLittleMorves.setBounds(new Rectangle(290, 75, 40, 20));
			p1NoLittleMorves.setText("Z");
			p1LittleMorveLabel = new JLabel();
			p1LittleMorveLabel.setBounds(new Rectangle(170, 75, 110, 20));
			p1LittleMorveLabel.setText("Petites morves :");
			p1MidMorveLabel = new JLabel();
			p1MidMorveLabel.setBounds(new Rectangle(170, 55, 120, 20));
			p1MidMorveLabel.setText("Moyennes morves :");
			p1BigMorveLabel = new JLabel();
			p1BigMorveLabel.setBounds(new Rectangle(170, 35, 120, 20));
			p1BigMorveLabel.setText("Grosses morves :");
			p1InfoLabel = new JLabel();
			p1InfoLabel.setBounds(new Rectangle(170, 10, 150, 20));
			p1InfoLabel.setText("Morves restantes");
			p1NameLabel = new JLabel();
			p1NameLabel.setBounds(new Rectangle(20, 10, 100, 20));
			p1NameLabel.setText("Player 1");
			playerPanel = new JPanel();
			playerPanel.setLayout(null);
			playerPanel.setSize(new Dimension(800, 100));
			playerPanel.add(p1NameLabel, null);
			playerPanel.add(p1InfoLabel, null);
			playerPanel.add(p1BigMorveLabel, null);
			playerPanel.add(p1MidMorveLabel, null);
			playerPanel.add(p1LittleMorveLabel, null);
			playerPanel.add(p1NoBigMorves, null);
			playerPanel.add(p1NoMidMorves, null);
			playerPanel.add(p1NoLittleMorves, null);
		}
		return playerPanel;
	}
	private JPanel getInfoPanel() {
		if (infoPanel == null) {
			infoPanel = new JPanel();
			infoPanel.setLayout(new GridBagLayout());
			infoPanel.setSize(new Dimension(800, 100));
		}
		return infoPanel;
	}
	private JPanel getGridPanel() {
		if (gridPanel == null) {
			gridPanel = new JPanel();
			gridPanel.setLayout(new GridBagLayout());
			gridPanel.setSize(new Dimension(800, 300));
		}
		return gridPanel;
	}

	@Override
	public void itemStateChanged(ItemEvent arg0) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		
	}    
}
