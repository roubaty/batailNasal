/*
 * DisplayViewPanel.java
 *
 * Created on January 22, 2007, 2:36 PM
 */

package view;

import controller.IController;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.Rectangle;
import java.awt.TextArea;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.*;
import javax.swing.*;


public class SecondaryView implements ActionListener, Observer, IView
{
    //  The components used by this view
    private IController controller;
    private JFrame frame;
	private ResourceBundle rLabels;
	private JPanel logPanel = null;
	private TextArea logArea;
	private JPanel imgPanel = null;
	private JScrollPane scroll;
	private JLabel imgLabel;
	private JPanel secondaryPanel = null;
    
    /**
     * Creates new form TextElementDisplayPanel
     * @param controller2 An object implenting the controller interface that
     *        this view can use to process GUI actions
     */
    public SecondaryView(IController controller2) {
        
        this.controller = controller2;
        
        rLabels = ResourceBundle.getBundle("properties/vue_secondaire_fr");
        
        initFrame();
        initComponents();
        localInitialization();
        frame.getRootPane().revalidate();
    }
    
    /**
     * Initialization method called from the constructor to init the frame
     */
    public void initFrame() {
		frame = new JFrame(rLabels.getString("title"));
		// Add a window listner for close button
		frame.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent e) {
				System.exit(0);
			}
		});
		frame.setPreferredSize(new Dimension(700, 250));
		frame.pack();
		frame.setLocation(50, 550);
		frame.setVisible(true);
    }
    
	private JPanel getSecondaryPanel() {
		if (secondaryPanel == null) {
			secondaryPanel = new JPanel();
			logArea = new TextArea();
			logArea.setEditable(false);
			logArea.setBounds(new Rectangle(0, 0, 400, 200));
			imgLabel = new JLabel();
			imgLabel.setIcon(new ImageIcon(getClass().getResource("../ressources/pictures/bonus_spray.gif" )));
			logPanel = new JPanel();
			logPanel.setBounds(new Rectangle(400, 0, 200, 200));
			logPanel.add(imgLabel, null);
			secondaryPanel.add(logArea, null);
			secondaryPanel.add(logPanel, null);
		}
		return secondaryPanel;
	}

    /**
     * Initialization method called from the constructor
     */
    public void localInitialization() {
        
    }
    
    // </editor-fold>
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
    	frame.add(getSecondaryPanel(), null);  
    }
    
	private void changeLabels(){
		frame.setTitle(rLabels.getString("title"));
	}
    
	public void writeLog(String log){
		String text = logArea.getText();
		text = text + "\n" + log;
		logArea.setText(text);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object source = e.getSource();
		/*
		if(source == menuItemQuit){
			System.exit(0);
		}*/
	}

	@Override
	public void update(Observable arg0, Object arg1) {
				
	}    
}
