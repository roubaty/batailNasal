/*
 * PropertiesViewPanel.java
 *
 * Created on January 22, 2007, 2:10 PM
 */

package view;

import controller.DefaultController;
import java.beans.PropertyChangeEvent;

/**
 * This is a custom view panel that display properties for both the document
 * and text element. Both the document and the text element respond to changes
 * in the model state.
 *
 * @author 
 */

public class PropertiesViewPanel extends AbstractViewPanel
{
    
    //  The controller used by this view
    
    private DefaultController controller;
    
    
    
    /**
     * Creates new form PropertiesViewPanel
     * @param controller An object implenting the controller interface that
     *        this view can use to process GUI actions
     */
    public PropertiesViewPanel(DefaultController controller) {
        
        this.controller = controller;
        
        initComponents();
        localInitialization();
        
    }                       
    
    /**
     * Used to provide local initialization of Swing components outside of the
     * NetBeans auto code generator.
     */
    public void localInitialization() {
    }
    
    /**
     * Called by the controller when it needs to pass along a property change
     * from a model. Note that the method checks each GUI parameter to determine
     * if the current value is already equal to the incoming value. If it is, 
     * the method will not reset the value. This is done to prevent looping from
     * occurring when a model property is reset.
     * @param evt The property change event
     */
    public void modelPropertyChange(final PropertyChangeEvent evt) {
    }   
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
    }
    
}
